# name: moodle-mod_jupyter CI

# on: push

# env:
#   DB: 'mariadb'
#   MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 'true'
#   TRAVIS_BUILD_DIR: '$CI_PROJECT_DIR'
#   MOODLE_BRANCH: 'MOODLE_311_STABLE'
#   MOODLE_DIR: '/var/www/html/moodle'
#   MOODLE_BEHAT_WDHOST: 'http://selenium-standalone-chrome:4444/wd/hub'
#   MOODLE_START_BEHAT_SERVERS: 'NO'
#   IGNORE_NAMES: 'lib.php, upgrade.php'

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     #paths-ignore:
#     #  - '**.md'
#     #  - '.vscode/*'
#     steps:
#       - name: lint
#         # these checks can be run without the Moodle install:
#         run: |
#           export PATH="/var/www/html/ci/bin:/var/www/html/ci/vendor/bin:$PATH"
#           moodle-plugin-ci phplint $CI_PROJECT_DIR
#           moodle-plugin-ci phpcpd $CI_PROJECT_DIR
#           moodle-plugin-ci savepoints $CI_PROJECT_DIR

#   install_moodle:
#     runs-on: ubuntu-latest
#     #paths-ignore:
#     #  - '**.md'
#     #  - 'documentation/**'
#     steps:
#       - name: Installing Moodle
#         run: |
#           export PATH="/var/www/html/ci/bin:/var/www/html/ci/vendor/bin:$PATH"
#           moodle-plugin-ci install --moodle=$MOODLE_DIR --db-host=mariadb --no-init --plugin=$CI_PROJECT_DIR -vvv
#           cd $MOODLE_DIR
#           export IPADDRESS=`grep "$HOSTNAME$" /etc/hosts | awk '{print $1}'`
#           php -S $IPADDRESS:8000 -t $MOODLE_DIR > /dev/null 2>&1 &

#   test:
#     runs-on: ubuntu-latest
#     #paths-ignore:
#     #  - '**.md'
#     #  - '.vsc/**'
#     services: 
#       mariadb:
#         image: mariadb:10.7.4
#     steps:
#       - name: test
#         run: |
#           moodle-plugin-ci phpmd
#           moodle-plugin-ci validate
#           moodle-plugin-ci phpunit
#           moodle-plugin-ci codechecker --max-warnings 0
#           moodle-plugin-ci grunt
#           moodle-plugin-ci phpdoc
    
#     #zip-plugin job

name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.7.4
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ['7.3', '7.4', '8.0']
        moodle-branch: ['MOODLE_311_STABLE']
        database: [mariadb]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          # none to use phpdbg fallback. Specify pcov (Moodle 3.10 and up) or xdebug to use them instead.
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV
      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker --max-warnings 0

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit