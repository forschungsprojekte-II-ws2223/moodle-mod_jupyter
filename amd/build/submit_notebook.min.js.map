{"version":3,"file":"submit_notebook.min.js","sources":["../src/submit_notebook.js"],"sourcesContent":["import { submitNotebook } from './repository';\nimport { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\nimport { get_string as getString } from 'core/str';\n\nconst context = {\n    message: '',\n    closebutton: 1,\n    announce: 1\n};\n\nconst Selectors = {\n    elements: {\n        submitResponse: '[data-element=\"mod_jupyter/submit-response\"]'\n    },\n    actions: {\n        submitButton: '[data-action=\"mod_jupyter/submit-notebook_button\"]',\n    },\n};\n\nexport const init = async ({ user, courseid, instanceid, filename, token }) => {\n    getString('submitsuccessnotification', 'mod_jupyter')\n        .then(str => {\n            context.message = str;\n        })\n        .catch();\n\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.actions.submitButton)) {\n            callSubmitNotebook(user, courseid, instanceid, filename, token);\n\n            // This will call the function to load and render our template.\n            Templates.renderForPromise('core/notification_info', context)\n\n                // It returns a promise that needs to be resoved.\n                .then(({ html, js }) => {\n                    // Here eventually I have my compiled template, and any javascript that it generated.\n                    // The templates object has append, prepend and replace functions.\n                    Templates.appendNodeContents(Selectors.elements.submitResponse, html, js);\n                })\n                // Deal with this exception (Using core/notify exception function is recommended).\n                .catch((error) => displayException(error));\n        }\n    });\n};\n\nconst callSubmitNotebook = async (user, courseid, instanceid, filename, token) => {\n    const response = await submitNotebook(user, courseid, instanceid, filename, token);\n    window.console.log(response);\n    //return response;\n};\n"],"names":["context","message","closebutton","announce","Selectors","submitResponse","submitButton","async","user","courseid","instanceid","filename","token","then","str","catch","document","addEventListener","e","target","closest","callSubmitNotebook","renderForPromise","_ref2","html","js","appendNodeContents","error","response","window","console","log"],"mappings":"uUAKMA,QAAU,CACZC,QAAS,GACTC,YAAa,EACbC,SAAU,GAGRC,mBACQ,CACNC,eAAgB,gDAFlBD,kBAIO,CACLE,aAAc,oEAIFC,MAAAA,WAAOC,KAAEA,KAAFC,SAAQA,SAARC,WAAkBA,WAAlBC,SAA8BA,SAA9BC,MAAwCA,gCACrD,4BAA6B,eAClCC,MAAKC,MACFd,QAAQC,QAAUa,OAErBC,QAELC,SAASC,iBAAiB,SAASC,IAC3BA,EAAEC,OAAOC,QAAQhB,kBAAkBE,gBACnCe,mBAAmBb,KAAMC,SAAUC,WAAYC,SAAUC,0BAG/CU,iBAAiB,yBAA0BtB,SAGhDa,MAAKU,YAACC,KAAEA,KAAFC,GAAQA,6BAGDC,mBAAmBtB,mBAAmBC,eAAgBmB,KAAMC,OAGzEV,OAAOY,QAAU,2BAAiBA,oBAK7CN,mBAAqBd,MAAOC,KAAMC,SAAUC,WAAYC,SAAUC,eAC9DgB,eAAiB,8BAAepB,KAAMC,SAAUC,WAAYC,SAAUC,OAC5EiB,OAAOC,QAAQC,IAAIH"}