{"version":3,"file":"submit_notebook.min.js","sources":["../src/submit_notebook.js"],"sourcesContent":["import { submitNotebook } from './repository';\nimport { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\nimport { get_string as getString } from 'core/str';\n\nconst context = {\n    message: '',\n    closebutton: 1,\n    announce: 1\n};\n\nconst Selectors = {\n    elements: {\n        submitResponse: '[data-element=\"mod_jupyter/submit-response\"]'\n    },\n    actions: {\n        submitButton: '[data-action=\"mod_jupyter/submit-notebook_button\"]',\n    },\n};\n\nexport const init = async ({ user, contextid }) => {\n    getString('submitsuccessnotification', 'mod_jupyter')\n        .then(str => {\n            context.message = str;\n        })\n        .catch();\n\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.actions.submitButton)) {\n            callSubmitNotebook(user, contextid);\n\n            // This will call the function to load and render our template.\n            Templates.renderForPromise('core/notification_info', context)\n\n                // It returns a promise that needs to be resoved.\n                .then(({ html, js }) => {\n                    // Here eventually I have my compiled template, and any javascript that it generated.\n                    // The templates object has append, prepend and replace functions.\n                    Templates.appendNodeContents(Selectors.elements.submitResponse, html, js);\n                })\n                // Deal with this exception (Using core/notify exception function is recommended).\n                .catch((error) => displayException(error));\n        }\n    });\n};\n\nconst callSubmitNotebook = async (user, contextid) => {\n    const response = await submitNotebook(user, contextid);\n    window.console.log(response);\n    return response;\n};\n"],"names":["obj","_templates","__esModule","default","context","message","closebutton","announce","Selectors","submitResponse","submitButton","_exports","init","async","user","contextid","_ref","getString","then","str","catch","document","addEventListener","e","target","closest","callSubmitNotebook","Templates","renderForPromise","_ref2","html","js","appendNodeContents","error","displayException","exception","response","submitNotebook","window","console","log"],"mappings":"8KAEuC,IAAAA,iFAAvCC,YAAuCD,IAAvCC,aAAuCD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAGvC,MAAMI,QAAU,CACZC,QAAS,GACTC,YAAa,EACbC,SAAU,GAGRC,mBACQ,CACNC,eAAgB,gDAFlBD,kBAIO,CACLE,aAAc,sDA4BpBC,SAAAC,KAxBkBC,aAA+B,IAAxBC,KAAEA,KAAIC,UAAEA,WAAWC,MAC1C,EAAAC,KAAAA,YAAU,4BAA6B,eAClCC,MAAKC,MACFf,QAAQC,QAAUc,GAAG,IAExBC,QAELC,SAASC,iBAAiB,SAASC,IAC3BA,EAAEC,OAAOC,QAAQjB,kBAAkBE,gBACnCgB,mBAAmBZ,KAAMC,WAGzBY,WAASxB,QAACyB,iBAAiB,yBAA0BxB,SAGhDc,MAAKW,QAAkB,IAAjBC,KAAEA,KAAIC,GAAEA,IAAIF,MAGfF,WAAAA,QAAUK,mBAAmBxB,mBAAmBC,eAAgBqB,KAAMC,GAAG,IAG5EX,OAAOa,QAAU,EAAAC,cAAgBC,WAACF,SAC3C,GACF,EAGN,MAAMP,mBAAqBb,MAAOC,KAAMC,aACpC,MAAMqB,eAAiB,EAAAC,4BAAevB,KAAMC,WAE5C,OADAuB,OAAOC,QAAQC,IAAIJ,UACZA,QAAQ,CACjB"}