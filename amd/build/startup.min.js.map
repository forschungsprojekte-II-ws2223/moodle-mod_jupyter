{"version":3,"file":"startup.min.js","sources":["../src/startup.js"],"sourcesContent":["import { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\n\nconst context = {\n    login: '',\n};\n\nconst Selectors = {\n    elements: {\n        tempPlaceholder: '[data-element=\"mod_jupyter/placeholder\"]'\n    }\n};\n\nexport const init = ({ login }) => {\n    // This will call the function to load and render our template.\n    context.login = login;\n    Templates.renderForPromise('mod_jupyter/manage', context)\n        // It returns a promise that needs to be resoved.\n        .then(({ html, js }) => {\n            // Here eventually I have my compiled template, and any javascript that it generated.\n            // The templates object has append, prepend and replace functions.\n            Templates.replaceNodeContents(Selectors.elements.tempPlaceholder, html, js);\n        })\n        // Deal with this exception (Using core/notify exception function is recommended).\n        .catch((error) => displayException(error));\n};\n\n"],"names":["obj","_templates","__esModule","default","context","login","Selectors","tempPlaceholder","_exports","init","_ref","Templates","renderForPromise","then","_ref2","html","js","replaceNodeContents","catch","error","displayException","exception"],"mappings":"2HACuC,IAAAA,iFAAvCC,YAAuCD,IAAvCC,aAAuCD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAEvC,MAAMI,QAAU,CACZC,MAAO,IAGLC,mBACQ,CACNC,gBAAiB,4CAgBvBC,SAAAC,KAZkBC,OAAe,IAAdL,MAAEA,OAAOK,KAE1BN,QAAQC,MAAQA,MAChBM,WAASR,QAACS,iBAAiB,qBAAsBR,SAE5CS,MAAKC,QAAkB,IAAjBC,KAAEA,KAAIC,GAAEA,IAAIF,MAGfH,WAAAA,QAAUM,oBAAoBX,mBAAmBC,gBAAiBQ,KAAMC,GAAG,IAG9EE,OAAOC,QAAU,EAAAC,cAAgBC,WAACF,QAAO,CAChD"}